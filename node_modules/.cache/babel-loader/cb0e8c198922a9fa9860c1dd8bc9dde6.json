{"ast":null,"code":"/*\n\tHebcal - A Jewish Calendar Generator\n\tCopyright (C) 1994-2004  Danny Sadinoff\n\tPortions Copyright (c) 2002 Michael J. Radwin. All Rights Reserved.\n\n\thttps://github.com/hebcal/hebcal-js\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\tDanny Sadinoff can be reached at danny@sadinoff.com\n\n\tMichael Radwin has made significant contributions as a result of\n\tmaintaining hebcal.com.\n\n\tThe JavaScript code was completely rewritten in 2014 by Eyal Schachter.\n */\n// name, lat, long, Israel\nvar cities = {\n  \"Ashdod\": [31.8, 34.633, true],\n  \"Atlanta\": [33.75, -84.383, false],\n  \"Austin\": [30.266, -97.75, false],\n  \"Baghdad\": [33.233, 44.366, false],\n  \"Beer Sheva\": [31.25, 34.783, true],\n  \"Berlin\": [52.516, 13.4, false],\n  \"Baltimore\": [39.283, -76.6, false],\n  \"Bogota\": [4.6, -74.083, false],\n  \"Boston\": [42.333, -71.066, false],\n  \"Buenos Aires\": [-34.616, -58.4, false],\n  \"Buffalo\": [42.883, -78.866, false],\n  \"Chicago\": [41.833, -87.75, false],\n  \"Cincinnati\": [39.1, -84.516, false],\n  \"Cleveland\": [41.5, -81.683, false],\n  \"Dallas\": [32.783, -96.8, false],\n  \"Denver\": [39.733, -104.983, false],\n  \"Detroit\": [42.333, -83.033, false],\n  \"Eilat\": [29.55, 34.95, true],\n  \"Gibraltar\": [36.133, -5.35, false],\n  \"Haifa\": [32.816, 34.983, true],\n  \"Hawaii\": [19.5, -155.5, false],\n  \"Houston\": [29.766, -95.366, false],\n  \"Jerusalem\": [31.783, 35.233, true],\n  \"Johannesburg\": [-26.166, 28.033, false],\n  \"Kiev\": [50.466, 30.483, false],\n  \"La Paz\": [-16.5, -68.15, false],\n  \"Livingston\": [40.283, -74.3, false],\n  \"London\": [51.5, -0.166, false],\n  \"Los Angeles\": [34.066, -118.25, false],\n  \"Miami\": [25.766, -80.2, false],\n  \"Melbourne\": [-37.866, 145.133, false],\n  \"Mexico City\": [19.4, -99.15, false],\n  \"Montreal\": [45.5, -73.6, false],\n  \"Moscow\": [55.75, 37.7, false],\n  \"New York\": [40.716, -74.016, false],\n  \"Omaha\": [41.266, -95.933, false],\n  \"Ottawa\": [45.7, -76.183, false],\n  \"Panama City\": [8.966, -79.533, false],\n  \"Paris\": [48.866, 2.333, false],\n  \"Petach Tikvah\": [32.083, 34.883, true],\n  \"Philadelphia\": [39.95, -75.166, false],\n  \"Phoenix\": [33.45, -112.066, false],\n  \"Pittsburgh\": [40.433, -80, false],\n  \"Saint Louis\": [38.633, -90.2, false],\n  \"Saint Petersburg\": [59.883, 30.25, false],\n  \"San Francisco\": [37.783, -122.416, false],\n  \"Seattle\": [47.6, -122.333, false],\n  \"Sydney\": [-33.916, 151.283, false],\n  \"Tel Aviv\": [32.083, 34.766, true],\n  \"Tiberias\": [32.966, 35.533, true],\n  \"Toronto\": [43.633, -79.4, false],\n  \"Vancouver\": [49.266, -123.116, false],\n  \"White Plains\": [41.033, -73.75, false],\n  \"Washington DC\": [38.916, -77, false]\n};\n\nfunction getCity(city) {\n  city = city.split(/\\s+/).map(function (w, i, c) {\n    if (c.join(' ').toLowerCase() === 'washington dc' && i === 1) {\n      // special case\n      return w.toUpperCase();\n    }\n\n    return w[0].toUpperCase() + w.slice(1).toLowerCase();\n  }).join(' ');\n  return cities[city] || [0, 0, false];\n}\n\nexports.getCity = getCity;\n\nfunction listCities() {\n  return Object.keys(cities);\n}\n\nexports.listCities = listCities;\n\nexports.addCity = function (city, info) {\n  if (!Array.isArray(info)) {\n    throw new TypeError('adding non-array city');\n  }\n\n  if (info.length == 5) {\n    var i = info.slice();\n    info = [];\n    info[0] = (i[0] * 60 + i[1]) / 60;\n    info[1] = (i[2] * 60 + i[3]) / 60;\n    info[2] = i[4];\n  }\n\n  if (info.length != 3) {\n    throw new TypeError('length of city array is not 3');\n  }\n\n  city = city.split(/\\s+/).map(function (w) {\n    return w[0].toUpperCase() + w.slice(1).toLowerCase();\n  }).join(' ');\n  cities[city] = info;\n};\n\nexports.nearest = function (lat, lon) {\n  if (Array.isArray(lat)) {\n    lat = (lat[0] * 60 + lat[1]) / 60;\n  }\n\n  if (Array.isArray(lon)) {\n    lon = (lon[0] * 60 + lon[1]) / 60;\n  }\n\n  if (typeof lat != 'number') {\n    throw new TypeError('incorrect lat type passed to nearest()');\n  }\n\n  if (typeof lon != 'number') {\n    throw new TypeError('incorrect long type passed to nearest()');\n  }\n\n  return listCities().map(function (city) {\n    var i = getCity(city);\n    return {\n      name: city,\n      dist: Math.sqrt(Math.pow(Math.abs(i[0] - lat), 2) + Math.pow(Math.abs(i[1] - lon), 2))\n    };\n  }).reduce(function (close, city) {\n    return close.dist < city.dist ? close : city;\n  }).name;\n};","map":null,"metadata":{},"sourceType":"script"}