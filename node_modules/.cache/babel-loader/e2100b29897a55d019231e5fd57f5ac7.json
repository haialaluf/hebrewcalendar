{"ast":null,"code":"/*\n\tHebcal - A Jewish Calendar Generator\n\tCopyright (C) 1994-2004  Danny Sadinoff\n\tPortions Copyright (c) 2002 Michael J. Radwin. All Rights Reserved.\n\n\thttps://github.com/hebcal/hebcal-js\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program. If not, see <http://www.gnu.org/licenses/>.\n\n\tDanny Sadinoff can be reached at danny@sadinoff.com\n\n\tMichael Radwin has made significant contributions as a result of\n\tmaintaining hebcal.com.\n\n\tThe JavaScript code was completely rewritten in 2014 by Eyal Schachter.\n */\nvar c = require('./common'),\n    greg = require('./greg'),\n    gematriya = require('gematriya');\n\nvar shas = [// sname, aname, hname, blatt\n[\"Berachot\", \"Berachos\", \"ברכות\", 64], [\"Shabbat\", \"Shabbos\", \"שבת\", 157], [\"Eruvin\", \"Eruvin\", \"עירובין\", 105], [\"Pesachim\", 0, \"פסחים\", 121], [\"Shekalim\", 0, \"שקלים\", 22], [\"Yoma\", 0, \"יומא\", 88], [\"Sukkah\", 0, \"סוכה\", 56], [\"Beitzah\", 0, \"ביצה\", 40], [\"Rosh Hashana\", 0, \"ראש השנה\", 35], [\"Taanit\", \"Taanis\", \"תענית\", 31], [\"Megillah\", 0, \"מגילה\", 32], [\"Moed Katan\", 0, \"מועד קטן\", 29], [\"Chagigah\", 0, \"חגיגה\", 27], [\"Yevamot\", \"Yevamos\", \"יבמות\", 122], [\"Ketubot\", \"Kesubos\", \"כתובות\", 112], [\"Nedarim\", 0, \"נדרים\", 91], [\"Nazir\", 0, \"נזיר\", 66], [\"Sotah\", 0, \"סוטה\", 49], [\"Gitin\", 0, \"גיטין\", 90], [\"Kiddushin\", 0, \"קידושין\", 82], [\"Baba Kamma\", 0, \"בבא קמא\", 119], [\"Baba Metzia\", 0, \"בבא מציעא\", 119], [\"Baba Batra\", \"Baba Basra\", \"בבא בתרא\", 176], [\"Sanhedrin\", 0, \"סנהדרין\", 113], [\"Makkot\", \"Makkos\", \"מכות\", 24], [\"Shevuot\", \"Shevuos\", \"שבועות\", 49], [\"Avodah Zarah\", 0, \"עבודה זרה\", 76], [\"Horayot\", \"Horayos\", \"הוריות\", 14], [\"Zevachim\", 0, \"זבחים\", 120], [\"Menachot\", \"Menachos\", \"מנחות\", 110], [\"Chullin\", 0, \"חולין\", 142], [\"Bechorot\", \"Bechoros\", \"בכורות\", 61], [\"Arachin\", 0, \"ערכין\", 34], [\"Temurah\", 0, \"תמורה\", 34], [\"Keritot\", \"Kerisos\", \"כריתות\", 28], [\"Meilah\", 0, \"מעילה\", 22], [\"Kinnim\", 0, \"קנים\", 4], [\"Tamid\", 0, \"תמיד\", 10], [\"Midot\", \"Midos\", \"מדות\", 4], [\"Niddah\", 0, \"נדה\", 73]].map(function (m) {\n  return {\n    name: m.slice(0, 3),\n    blatt: m[3]\n  };\n});\n\nexports.dafyomi = function (gregdate) {\n  var dafcnt = 40,\n      cno,\n      dno,\n      osday,\n      nsday,\n      total,\n      count,\n      j,\n      cday,\n      blatt;\n\n  if (!(gregdate instanceof Date)) {\n    throw new TypeError('non-date given to dafyomi');\n  }\n\n  osday = greg.greg2abs(new Date(1923, 8, 11));\n  nsday = greg.greg2abs(new Date(1975, 5, 24));\n  cday = greg.greg2abs(gregdate);\n\n  if (cday < osday) {\n    // no cycle; dy didn't start yet\n    return {\n      name: [],\n      blatt: 0\n    };\n  }\n\n  if (cday >= nsday) {\n    // \"new\" cycle\n    cno = 8 + (cday - nsday) / 2711;\n    dno = (cday - nsday) % 2711;\n  } else {\n    // old cycle\n    cno = 1 + (cday - osday) / 2702;\n    dno = (cday - osday) % 2702;\n  } // Find the daf taking note that the cycle changed slightly after cycle 7.\n\n\n  total = blatt = 0;\n  count = -1; // Fix Shekalim for old cycles\n\n  if (cno <= 7) {\n    shas[4].blatt = 13;\n  } else {\n    shas[4].blatt = 22;\n  } // Find the daf\n\n\n  j = 0;\n\n  while (j < dafcnt) {\n    count++;\n    total = total + shas[j].blatt - 1;\n\n    if (dno < total) {\n      blatt = shas[j].blatt + 1 - (total - dno); // fiddle with the weird ones near the end\n\n      switch (count) {\n        case 36:\n          blatt = blatt + 21;\n          break;\n\n        case 37:\n          blatt = blatt + 24;\n          break;\n\n        case 38:\n          blatt = blatt + 33;\n          break;\n\n        default:\n          break;\n      } // Bailout\n\n\n      j = 1 + dafcnt;\n    }\n\n    j++;\n  }\n\n  return {\n    name: shas[count].name,\n    blatt: blatt\n  };\n};\n\nexports.dafname = function (daf, o) {\n  return c.LANG(daf.name, o) + ' ' + (o === 'h' ? gematriya(daf.blatt) : daf.blatt);\n};","map":null,"metadata":{},"sourceType":"script"}